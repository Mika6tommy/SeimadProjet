{# templates/admin/dashboard.html.twig #}

{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content %}
    <style>
        .chart-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            height: 80vh; /* Ajustez la hauteur comme vous le souhaitez */
        }

        canvas {
            width: 80vw; /* Ajustez la largeur comme vous le souhaitez */
            height: 40vh; /* Ajustez la hauteur comme vous le souhaitez */
            margin-bottom: 20px;
        }

        h1 {
            text-align: center;
        }
    </style>

    <h1>Tableau de Bord</h1>
    <div class="chart-container">
        <canvas id="actualiteChart"></canvas>
        <canvas id="propertyChart"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://unpkg.com/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const actualiteData = {{ data|json_encode|raw }};
            const actualiteLabels = actualiteData.map(item => item.date);
            const actualiteCounts = actualiteData.map(item => item.count);

            const propertyData = {{ data1|json_encode|raw }};
            const propertyLabels = propertyData.map(item => item.date);
            const propertyCounts = propertyData.map(item => item.count);

            const actualiteCtx = document.getElementById('actualiteChart').getContext('2d');
            new Chart(actualiteCtx, {
                type: 'line',
                data: {
                    labels: actualiteLabels,
                    datasets: [{
                        label: 'Nombre d\'actualités',
                        data: actualiteCounts,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day'
                            }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const propertyCtx = document.getElementById('propertyChart').getContext('2d');
            new Chart(propertyCtx, {
                type: 'line',
                data: {
                    labels: propertyLabels,
                    datasets: [{
                        label: 'Nombre de propriétés',
                        data: propertyCounts,
                        borderColor: 'rgba(192, 75, 75, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day'
                            }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}
