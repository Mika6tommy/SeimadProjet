{# templates/admin/dashboard.html.twig #}

{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content %}
    <style>
        .chart-container {
            display: flex;
            justify-content: right;
            align-items: right;
            height: 10vh; /* Ajustez la hauteur comme vous le souhaitez */
        }

        canvas {
            width: 30vw; /* Ajustez la largeur comme vous le souhaitez */
            height: 10vh; /* Ajustez la hauteur comme vous le souhaitez */
            margin-bottom: 10px;
        }
        h1 {
            text-align: center;
        }
    </style>
<section>
<h1>Tableau de Bord</h1>
    <div class="chart-container">
        <canvas id="actualiteChart"></canvas>
        <canvas id="propertyChart"></canvas>
    </div>
</section>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://unpkg.com/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const actualiteData = {{ data|json_encode|raw }};
            const actualiteLabels = actualiteData.map(item => item.date);
            const actualiteCounts = actualiteData.map(item => item.count);

            const propertyData = {{ data1|json_encode|raw }};
            const propertyLabels = propertyData.map(item => item.date);
            const propertyCounts = propertyData.map(item => item.count);

            const actualiteCtx = document.getElementById('actualiteChart').getContext('2d');
            new Chart(actualiteCtx, {
                type: 'line',
                data: {
                    labels: actualiteLabels,
                    datasets: [{
                        label: 'Nombre d\'actualités',
                        data: actualiteCounts,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    responsive: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day'
                            }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const propertyCtx = document.getElementById('propertyChart').getContext('2d');
            
console.log(propertyLabels)
            new Chart(propertyCtx, {
                type: 'pie',
                data: {
                    labels: propertyLabels,
                    datasets: [{
                        label: 'Nombre des propriétés',
                        data: propertyCounts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    return `${label}: ${value}`;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}
